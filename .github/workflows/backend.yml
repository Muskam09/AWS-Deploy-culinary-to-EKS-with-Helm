name: Build and Deploy Backend

on:
  push:
    branches: ["main"]
    paths:
      - 'backend/**'
  workflow_dispatch:

env:
  AZURE_CONTAINER_REGISTRY: "acrsmachno"
  RESOURCE_GROUP: "smachno-k8s"
  CLUSTER_NAME: "smachno-k8s-cluster"
  IMAGE_NAME: "backend"

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Azure login
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Build and push backend image to ACR
        run: |
          az acr build --registry ${{ env.AZURE_CONTAINER_REGISTRY }} \
            --image ${{ env.AZURE_CONTAINER_REGISTRY }}.azurecr.io/${{ env.IMAGE_NAME }}:${{ github.sha }} \
            --file backend/Dockerfile backend/

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v4

      - name: Azure login
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Get K8s context
        uses: azure/aks-set-context@v3
        with:
          resource-group: ${{ env.RESOURCE_GROUP }}
          cluster-name: ${{ env.CLUSTER_NAME }}

      - name: Deploy backend with Helm
        run: |
          helm upgrade --install backend-release ./helm-charts/backend \
            --set image.tag=${{ github.sha }} \
            --set-string secret.SECRET_KEY='${{ secrets.DJANGO_SECRET_KEY }}' \
            --set-string secret.DATABASE_URL='${{ secrets.DATABASE_URL }}' \
            --wait # Чекати, доки деплоймент буде успішним